library(crayon)
red("Hello World")
x <- 1:25
y <- "Hello World"
"Hello World"
"Hello World"
y <- "Hello World"
x <- 1:25
y <- "Hello World"
5*x
x <- c(1,2,3,4)
names(x) <- c("A","B","C","D")
x
ls(x)
l(x)
attributes(x)
attr(x)
structure(x)
x <- rnorm(1000)
x
boxplot(x)
hist(x)
hist(x,breaks=100)
setwd("~/Downloads/"
)
tab <- read.table("registrations_2018_09_07__13_51.tsv",sep="\t",header=T, as.is=T)
tab <- read.table("registrations_2018_09_07__13_51.tsv",sep="\t",header=T, as.is=T, quote="")
head(tab)
tail(tab)
table(tab$test)
table(tab$status)
table(tab$status == "REGISTERED")
tab[table(tab$status == "REGISTERED"),]
tab[(tab$status == "REGISTERED"),]
tab <- tab[(tab$status == "REGISTERED"),]
head(tab)
table(tab$event)
head(tab$last_name)
table(tab$organizer)
table(tab$organizer %in% c("Bioinformatics Core","DNA Technologies Core","UCSF Center for Advanced Technology", "UCB-QB3 Genomics Sequencing Facility"))
tab[(tab$organizer %in% c("Bioinformatics Core","DNA Technologies Core","UCSF Center for Advanced Technology", "UCB-QB3 Genomics Sequencing Facility")),]
tab <- tab[(tab$organizer %in% c("Bioinformatics Core","DNA Technologies Core","UCSF Center for Advanced Technology", "UCB-QB3 Genomics Sequencing Facility")),]
dim(tab)
tab$event
table*tab$event)
table(tab$event)
tab$event %in% c("Testing","UC Sequencing Core Directors Conference" )
!(tab$event %in% c("Testing","UC Sequencing Core Directors Conference" ),]
!(tab$event %in% c("Testing","UC Sequencing Core Directors Conference" )
)
tab <- !(tab$event %in% c("Testing","UC Sequencing Core Directors Conference" )),]
tab[] !(tab$event %in% c("Testing","UC Sequencing Core Directors Conference" )),]
tab[!(tab$event %in% c("Testing","UC Sequencing Core Directors Conference" )),]
tab <- tab[!(tab$event %in% c("Testing","UC Sequencing Core Directors Conference" )),]
head(tab)
paste(tab$event_id, tab$event,sep="_:_")
tab$newID <- paste(tab$event_id, tab$event,sep="_:_")
tab$newID <- paste(tab$event_id, tab$event,sep="_:_")
tab$newID <- paste(tab$event_id, tab$event, tab$organizer,sep="_:_")
table(tab$newID,tab$price)
table(tab$refunded)
tab$refunded
table(tab$newID,tab$price)
dim(table(tab$newID,tab$price))
sumtab <- table(tab$newID,tab$price)
rownames(sum_tab)
rownames(sumtab)
strsplit(ownames(sumtab),split="_:_)"
)
strsplit(ownames(sumtab),split="_:_")
strsplit(rownames(sumtab),split="_:_")
unlist(strsplit(rownames(sumtab),split="_:_")
)
matrix(unlist(strsplit(rownames(sumtab),split="_:_")),ncol=3, byrow=T)
data.frame(matrix(unlist(strsplit(rownames(sumtab),split="_:_")),ncol=3, byrow=T))
df <- data.frame(matrix(unlist(strsplit(rownames(sumtab),split="_:_")),ncol=3, byrow=T))
colnames(df)
colnames(df) <- c("EventID","Event","Organizer")
data.frame(sumtab)
data.frame(sumtab,df)
newtable <<- data.frame(sumtab,df)
head(newtable)
newtable <- data.frame(sumtab,df)
head(newtable)
head(sumtab)
cbind(sumtab,df)
dim(df)
dim(sumtab)
dim(data.fame(df,sumab))
dim(data.fame(df,sumtab))
dim(data.frame(df,sumtab))
dim(data.frame(df,as.data.frame(sumtab)))
dim(data.frame(df,as.data.frame.matrix(sumtab)))
data.frame(df,as.data.frame.matrix(sumtab))
write.table(data.frame(df,as.data.frame.matrix(sumtab)), "registrations_2018_09_07__13_51_summary.tsv",sep="\t",row.names=F,col.names=T,quote=F)
write.table(data.frame(df,as.data.frame.matrix(sumtab)), "registrations_2018_09_07__13_51_summary.tsv",sep="\t",row.names=F,col.names=T)
ls()
head(tab)
table(tab$status)
table(tab$coupon.code)
table(tab$refunded)
income <- tapply(tab$amount,tab$event_id,sum)
income
income <- tapply(tab$amount,tab$event_id,function(x) sum(x))
income
income <- tapply(tab$amount,tab$event_id,function(x) sum(na.exclude(x)))
income
sum(income)
ls()
dim(newtable)
newtable <- data.frame(df,as.data.frame.matrix(sumtab))
newtable$income <- income[match(newtable$EventID,names(income))]
head(newtable)
write.table(data.frame(df,as.data.frame.matrix(sumtab)), "registrations_2018_09_07__13_51_summary.tsv",sep="\t",row.names=F,col.names=T)
write.table(newtable, "registrations_2018_09_07__13_51_summary.tsv",sep="\t",row.names=F,col.names=T)
head(tab)
date <- tapply(tab$registered,tab$event_id,function(x) min(na.exclude(x)))
data
date <- tapply(tab$registered,tab$event_id,function(x) min(na.exclude(x)))
edate <- tapply(tab$registered,tab$event_id,function(x) min(na.exclude(x)))
edate
newtable$date <- edate[match(newtable$EventID,names(edate))]
newtable[order(newtable$date),]
write.table(newtable, "registrations_2018_09_07__13_51_summary.tsv",sep="\t",row.names=F,col.names=T)
edate <- tapply(tab$registered,tab$event_id,function(x) min(x))
edate
edate <- tapply(tab$registered,tab$event_id,function(x) min(as.Date(x)))
edtate
edate
head(tab)
as.Date(tab$refunded)
as.Date(tab$registered)
sort(as.Date(tab$registered))
min(sort(as.Date(tab$registered)))
edate <- tapply(as.Date(tab$registered),tab$event_id,function(x) min(x))
edate
edate <- tapply(as.Date(tab$registered),tab$event_id,function(x) as.character(min(x)))
edate
newtable$date <- edate[match(newtable$EventID,names(edate))]
write.table(newtable, "registrations_2018_09_07__13_51_summary.tsv",sep="\t",row.names=F,col.names=T)
edate <- tapply(as.Date(tab$registered),tab$event_id,function(x) as.character(max(x)))
newtable$date <- edate[match(newtable$EventID,names(edate))]
write.table(newtable, "registrations_2018_09_07__13_51_summary.tsv",sep="\t",row.names=F,col.names=T)
install.packages("kableExtra")
getwd()
setwd("~/projects/src/github.com-ucdavis-bioinformatics-training/2019_August_UCD_mRNAseq_Workshop/intro2R/")
library(knitr)
colFmt = function(x,color){
outputFormat = opts_knit$get("rmarkdown.pandoc.to")
if(outputFormat == 'latex')
paste("\\textcolor{",color,"}{",x,"}",sep="")
else if(outputFormat == 'html')
paste("<font color='",color,"'>",x,"</font>",sep="")
else
x
}
library(knitr)
library(tidyverse)
library(reshape2)
library(gridExtra)
getwd()
file.exists("Data_in_R_files/bwa_mem_Stats.log")
data <- readLines("Data_in_R_files/bwa_mem_Stats.log")
head(data)
tail(data)
length(data)
sn <- grep("^SN",data, value=TRUE)
sn <- separate(data.frame(sn),col=1, into=c("ID", "Name","Value"), sep="\t")[,-1]
kable(sn, caption="Summary numbers")
rl <- grep("^RL",data, value=TRUE)
rl <- separate(data.frame(rl),col=1, into=c("ID", "read_length", "count"), sep="\t", convert = TRUE)[,-1]
is <- grep("^IS",data, value=TRUE)
is <- separate(data.frame(is),col=1, into=c("ID", "insert size","all pairs", "inward", "outward", "other"), sep="\t", convert=TRUE)[,-1]
actg <- grep("^GCC",data, value=TRUE)
actg <- separate(data.frame(actg),col=1, into=c("ID", "cycle", "A", "C", "G", "T", "N", "O"), sep="\t",  convert=TRUE)[,-1]
fq <- grep("^FFQ|^LFQ",data, value=TRUE)
fq <- separate(data.frame(fq),col=1, into=c("Pair", "Cycle", seq(41)), sep="\t", convert=TRUE)
gc <- grep("^GCF|^GCL",data, value=TRUE)
gc <- separate(data.frame(gc),col=1, into=c("Pair", "GC", "Count"), sep="\t", convert=TRUE)
id <- grep("^ID",data, value=TRUE)
id <- separate(data.frame(id),col=1, into=c("ID", "length", "insertion_count", "deletion_count"), sep="\t", covert=TRUE)[,-1]
ic <- grep("^IC",data, value=TRUE)
ic <- separate(data.frame(ic),col=1, into=c("ID", "cycle", "ins_fwd", "ins_rev", "del_fwd", "del_rev"), sep="\t", convert=TRUE)[,-1]
summarize(is,low=min(`insert size`), max=max(`insert size`), average=mean(`all pairs`), noutward=sum(outward), ninward=sum(inward))
new_is <- mutate(is,poutward=outward/`all pairs`, pinward=inward/`all pairs`)
g <- ggplot(data = is)
g + geom_line( aes(x=get("insert size"), y=get("all pairs")))
g + geom_line( aes(x=get("insert size"), y=get("all pairs"))) +
labs( x = "insert size", y = "all pairs", title ="Mapped insert sizes", subtitle = "All Pairs", caption = "all pairs insert size")
g <- ggplot(data = is, aes(x=get("insert size")))
g + geom_line(aes(y=get("inward")),color="blue") +
geom_line(aes(y=get("outward")),color="orange") +
labs( x = "insert size", y = "all pairs", title ="Mapped insert sizes", subtitle = "All Pairs", caption = "all pairs insert size")
g + geom_line(aes(y=get("inward")),color="blue") +
geom_line(aes(y=get("outward")),color="orange") +
coord_cartesian(xlim=c(0,500), ylim=c(0,600000))
g <- ggplot(data = is, aes(x=get("insert size")))
g <- g + geom_line(aes(y=get("all pairs")), color="black") +
geom_line(aes(y=get("inward")),color="blue") +
geom_line(aes(y=get("outward")),color="orange") +
geom_line(aes(y=get("other")), color="green")
g <- g +
labs( x = "insert size", y = "all pairs", title ="Mapped insert sizes", subtitle = "All Pairs", caption = "all pairs insert size")
g <- g + coord_cartesian(xlim=c(0,500), ylim=c(0,600000))
g <- g + theme_light()
plot(g)
head(gc)
h <- ggplot(gc, aes(as.numeric(GC), Count/sum(Count),color=Pair))
h <- h + geom_line()
h
actgm <- melt(actg,id="cycle")
ic <- ggplot(actgm, aes(as.numeric(cycle), as.numeric(value), by=variable, colour=variable))
i <- ic + geom_line() + coord_cartesian(ylim=c(0,100))
i
i2 <- ic + geom_boxplot()
i2
fqm <- melt(fq,id=c("Pair","Cycle"))
j <- ggplot(fqm, aes(Cycle, variable))
j + geom_tile(aes(fill = as.numeric(value)))
j = j + geom_tile(aes(fill = as.numeric(value))) +
scale_fill_gradient(low = "red", high = "green") +
ylab("Cycle") +
xlab("Quality") +
theme(legend.title = element_text(size = 10),
legend.text = element_text(size = 12),
plot.title = element_text(size=16),
axis.title=element_text(size=14,face="bold"),
axis.text.x = element_text(angle = 90, hjust = 1)) +
labs(fill = "Quality value")
j
k <- ggplot(id, aes(x=as.numeric(length)))
k <- k + geom_line(aes(y=as.numeric(insertion_count)), color = "red", size=1.5)
k <- k + geom_line(aes(y=as.numeric(deletion_count)), color = "black", size=1.5)
k
k <- k + scale_y_log10()
k
k <- k + theme(panel.grid.minor = element_blank(),
panel.grid.major = element_line(color = "gray50", size = 0.5),
panel.grid.major.x = element_blank())
k
k <- k + xlab("indel length") + ylab("indel count (log10)")
k
id$ratio <- as.numeric(id$insertion_count)/as.numeric(id$deletion_count)
l <- ggplot(id, aes(x=as.numeric(length)))
l <- l + geom_line(aes(y=as.numeric(ratio)), color = "green", size=1.0)
l
l <- l + theme(panel.grid.minor = element_blank(),
panel.grid.major = element_line(color = "gray50", size = 0.5),
panel.grid.major.x = element_blank())
l
l <- l + xlab("indel length") + ylab("insertion/deletion ratio")
l
grid.arrange(k, l, nrow = 1)
include_graphics("https://raw.githubusercontent.com/ucdavis-bioinformatics-training/2019_August_UCD_mRNAseq_Workshop/master/intro2R/Data_in_R_figures/grid_plot.png")
full <- grid.arrange(
g, h, i, i2,
widths = c(2, 1, 1),
layout_matrix = rbind(c(1, 2, NA),
c(3, 3, 4))
)
sessionInfo()
